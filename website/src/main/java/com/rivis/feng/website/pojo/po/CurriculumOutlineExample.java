package com.rivis.feng.website.pojo.po;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CurriculumOutlineExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public CurriculumOutlineExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andOutlineIdIsNull() {
            addCriterion("outline_id is null");
            return (Criteria) this;
        }

        public Criteria andOutlineIdIsNotNull() {
            addCriterion("outline_id is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineIdEqualTo(Long value) {
            addCriterion("outline_id =", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdNotEqualTo(Long value) {
            addCriterion("outline_id <>", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdGreaterThan(Long value) {
            addCriterion("outline_id >", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdGreaterThanOrEqualTo(Long value) {
            addCriterion("outline_id >=", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdLessThan(Long value) {
            addCriterion("outline_id <", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdLessThanOrEqualTo(Long value) {
            addCriterion("outline_id <=", value, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdIn(List<Long> values) {
            addCriterion("outline_id in", values, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdNotIn(List<Long> values) {
            addCriterion("outline_id not in", values, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdBetween(Long value1, Long value2) {
            addCriterion("outline_id between", value1, value2, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineIdNotBetween(Long value1, Long value2) {
            addCriterion("outline_id not between", value1, value2, "outlineId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdIsNull() {
            addCriterion("outline_lecture_id is null");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdIsNotNull() {
            addCriterion("outline_lecture_id is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdEqualTo(Long value) {
            addCriterion("outline_lecture_id =", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdNotEqualTo(Long value) {
            addCriterion("outline_lecture_id <>", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdGreaterThan(Long value) {
            addCriterion("outline_lecture_id >", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdGreaterThanOrEqualTo(Long value) {
            addCriterion("outline_lecture_id >=", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdLessThan(Long value) {
            addCriterion("outline_lecture_id <", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdLessThanOrEqualTo(Long value) {
            addCriterion("outline_lecture_id <=", value, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdIn(List<Long> values) {
            addCriterion("outline_lecture_id in", values, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdNotIn(List<Long> values) {
            addCriterion("outline_lecture_id not in", values, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdBetween(Long value1, Long value2) {
            addCriterion("outline_lecture_id between", value1, value2, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineLectureIdNotBetween(Long value1, Long value2) {
            addCriterion("outline_lecture_id not between", value1, value2, "outlineLectureId");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateIsNull() {
            addCriterion("outline_execute_date is null");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateIsNotNull() {
            addCriterion("outline_execute_date is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateEqualTo(Date value) {
            addCriterionForJDBCDate("outline_execute_date =", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("outline_execute_date <>", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateGreaterThan(Date value) {
            addCriterionForJDBCDate("outline_execute_date >", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("outline_execute_date >=", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateLessThan(Date value) {
            addCriterionForJDBCDate("outline_execute_date <", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("outline_execute_date <=", value, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateIn(List<Date> values) {
            addCriterionForJDBCDate("outline_execute_date in", values, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("outline_execute_date not in", values, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("outline_execute_date between", value1, value2, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("outline_execute_date not between", value1, value2, "outlineExecuteDate");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeIsNull() {
            addCriterion("outline_execute_time is null");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeIsNotNull() {
            addCriterion("outline_execute_time is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeEqualTo(Date value) {
            addCriterionForJDBCTime("outline_execute_time =", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("outline_execute_time <>", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("outline_execute_time >", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("outline_execute_time >=", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeLessThan(Date value) {
            addCriterionForJDBCTime("outline_execute_time <", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("outline_execute_time <=", value, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeIn(List<Date> values) {
            addCriterionForJDBCTime("outline_execute_time in", values, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("outline_execute_time not in", values, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("outline_execute_time between", value1, value2, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineExecuteTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("outline_execute_time not between", value1, value2, "outlineExecuteTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeIsNull() {
            addCriterion("outline_create_time is null");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeIsNotNull() {
            addCriterion("outline_create_time is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeEqualTo(Date value) {
            addCriterion("outline_create_time =", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeNotEqualTo(Date value) {
            addCriterion("outline_create_time <>", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeGreaterThan(Date value) {
            addCriterion("outline_create_time >", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("outline_create_time >=", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeLessThan(Date value) {
            addCriterion("outline_create_time <", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("outline_create_time <=", value, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeIn(List<Date> values) {
            addCriterion("outline_create_time in", values, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeNotIn(List<Date> values) {
            addCriterion("outline_create_time not in", values, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeBetween(Date value1, Date value2) {
            addCriterion("outline_create_time between", value1, value2, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("outline_create_time not between", value1, value2, "outlineCreateTime");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateIsNull() {
            addCriterion("outline_study_state is null");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateIsNotNull() {
            addCriterion("outline_study_state is not null");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateEqualTo(String value) {
            addCriterion("outline_study_state =", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateNotEqualTo(String value) {
            addCriterion("outline_study_state <>", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateGreaterThan(String value) {
            addCriterion("outline_study_state >", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateGreaterThanOrEqualTo(String value) {
            addCriterion("outline_study_state >=", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateLessThan(String value) {
            addCriterion("outline_study_state <", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateLessThanOrEqualTo(String value) {
            addCriterion("outline_study_state <=", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateLike(String value) {
            addCriterion("outline_study_state like", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateNotLike(String value) {
            addCriterion("outline_study_state not like", value, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateIn(List<String> values) {
            addCriterion("outline_study_state in", values, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateNotIn(List<String> values) {
            addCriterion("outline_study_state not in", values, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateBetween(String value1, String value2) {
            addCriterion("outline_study_state between", value1, value2, "outlineStudyState");
            return (Criteria) this;
        }

        public Criteria andOutlineStudyStateNotBetween(String value1, String value2) {
            addCriterion("outline_study_state not between", value1, value2, "outlineStudyState");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table curriculum_outline
     *
     * @mbggenerated do_not_delete_during_merge Sat May 19 23:25:22 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table curriculum_outline
     *
     * @mbggenerated Sat May 19 23:25:22 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}